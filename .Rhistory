#let's start
data_Peru<-read_excel("/Users/oyukaagi/Documents/2020\ spring/econometrics/Peru_data.xlsx")
data_Peru$year<-data_Peru$AÃ±o
data_Peru<-data_Peru$PBI
data_Peru$Unemployment<-data_Peru$Desempleo
setwd("~/Documents/GW/Week15-R")
library(readr)
mpg_modified <- read_csv("test/mpg_modified.csv")
View(mpg_modified)
mpg_modified <- read_csv("test/mpg_modified.csv")
> mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
library(dplyr)
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
mpg_data <- read_csv("test/mpg_modified.csv")
only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy, mpg_2008$hwy, paired = T)
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
library(ggplot2)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
#####Multiple Regression
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
### Category
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("~/Documents/GitHub/MechaCar_Statistical_Analysis")
library(readr)
MechaCar_mpg <- read_csv("MechaCar_mpg.csv")
View(MechaCar_mpg)
MechaCar_mpg <- read_csv("MechaCar_mpg.csv")
View(MechaCar_mpg)
?lm()
)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
rary(readr)
MechaCar_mpg <- read_csv("MechaCar_mpg.csv") #read the data
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
## Linear regression
summary(lm(mpg ~ vehicle_weight, data = MechaCar_mpg))
## Linear regression
summary(lm(mpg ~ AWD, data = MechaCar_mpg))
vehicle_weight
## Linear regression
summary(lm(mpg ~ vehicle_weight, data = MechaCar_mpg))
library(readr)
Suspension_Coil <- read_csv("Suspension_Coil.csv")
View(Suspension_Coil)
### Deliverable 2
Suspension_Coil <- read_csv("Suspension_Coil.csv")
?summarize
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), .groups = 'keep')
summarize_demo
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), .groups = 'keep')
summarize_demo
?summarize
summarize_demo
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Variance = sd(PSI),.groups = 'keep')
summarize_demo
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = variance(PSI), SD = sd(PSI),.groups = 'keep')
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),.groups = 'keep')
summarize_demo
summarize_demo <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
summarize_demo
total_summary <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
total_summary
View(total_summary)
View(Suspension_Coil)
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
View(lot_summary)
### Deliverable 2
Suspension_Coil <- read_csv("Suspension_Coil.csv")
total_summary <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
total_summary <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
total_summary <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
total_summary
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median = median(PSI), Varience = var(PSI), SD = sd(PSI),)
lot_summary
### Deliverable 3
?t.test()
t.test(mpg_1999$hwy, mpg_2008$hwy, paired = T)
if (Suspension_Coil$Manufacturing_Lot == "Lot1"){
lo1_PSI <- Suspension_Coil$PSI
}
?grouped_df
### Deliverable 3
grouped_df(Suspension_Coil, Suspension_Coil$Manufacturing_Lot)
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Manufacturing_Lot)
groups
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot== "Lot1")
groups
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot = "Lot1")
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot == "Lot1")
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot = "Lot1")
### Deliverable 3
groups <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot == "Lot1")
### Deliverable 3
groups1 <- Suspension_Coil %>% group_by(Suspension_Coil$Manufacturing_Lot == "Lot1")
groups1
View(groups1)
